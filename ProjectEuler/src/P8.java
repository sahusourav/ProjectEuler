/* 
 * The four adjacent digits in the 1000-digit number that have the greatest product are 9 × 9 × 8 × 9 = 5832.
73167176531330624919225119674426574742355349194934
96983520312774506326239578318016984801869478851843
85861560789112949495459501737958331952853208805511
12540698747158523863050715693290963295227443043557
66896648950445244523161731856403098711121722383113
62229893423380308135336276614282806444486645238749
30358907296290491560440772390713810515859307960866
70172427121883998797908792274921901699720888093776
65727333001053367881220235421809751254540594752243
52584907711670556013604839586446706324415722155397
53697817977846174064955149290862569321978468622482
83972241375657056057490261407972968652414535100474
82166370484403199890008895243450658541227588666881
16427171479924442928230863465674813919123162824586
17866458359124566529476545682848912883142607690042
24219022671055626321111109370544217506941658960408
07198403850962455444362981230987879927244284909188
84580156166097919133875499200524063689912560717606
05886116467109405077541002256983155200055935729725
71636269561882670428252483600823257530420752963450
Find the thirteen adjacent digits in the 1000-digit number that have the greatest product. What is the value of this product?
*/
public class P8 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		String s="7316717653133062491922511967442657474235534919493496983520312774262395783180169848"
				+ "018694788518438586156078911294949545950173795833195285320880551112540698747158523"
				+ "863050715693290963295227443043557668966489504452445231617318564030987111217223831"
				+ "136222989342338030813533627661428280644448664523874930358907296290491560440772390"
				+ "713810515859307960866701724271218839987979087922749219016997208880937766572733300"
				+ "105336788122023542180975125454059475224352584907711670556013604839586446706324415"
				+ "722155397536978179778461740649551492908625693219784686224828397224137565705605749"
				+ "026140797296865241453510047482166370484403199890008895243450658541227588666881164"
				+ "271714799244429282308634656748139191231628245861786645835912456652947654568284891"
				+ "288314260769004224219022671055626321111109370544217506941658960408071984038509624"
				+ "554443629812309878799272442849091888458015616609791913387549920052406368991256071"
				+ "760605886116467109405077541002256983155200055935729725716362695618826704282524836"
				+ "00823257530420752963450";
		int size=13;long max=-1;
		for(int i=0; i+size <= s.length(); i++)
		{
			long prod=1;
			for(int j=0;j<size;j++)
			{
				prod*=s.charAt(i+j)-'0';
			}
			max=Math.max(prod, max);
		}
		System.out.println(max);
	}

}
//OUTPUT :- 23514624000